#include <iostream>
#include <bits/stdc++.h>
#include <ctime>
#include <random>

using namespace std;

char board[9] = {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '};

void show_board();
void get_x_player_choice();
void get_computer_choice();
int count_board(char ch);
char check_winner();
void computer_vs_player();

int main() {
    computer_vs_player();
    return 0;
}

void computer_vs_player() {
    string player_name;
    cout << "Enter player name:" << endl;
    getline(cin, player_name);

    while (true) {
        if (count_board('X') == count_board('O')) {
            cout << player_name << "'s turn:" << endl;
            show_board();
            get_x_player_choice();
        } else {
            get_computer_choice();
        }

        char winner = check_winner();
        if (winner == 'X') {
            system("cls"); // Use "clear" instead of "cls" for Linux/macOS
            show_board();
            cout << player_name << " Won the game!" << endl;
            break;
        } else if (winner == 'O') {
            system("clear"); // Use "clear" instead of "cls" for Linux/macOS
            show_board();
            cout << "Computer Won the game!" << endl;
            break;
        } else if (winner == 'D') {
            cout << "Game is draw." << endl;
            break;
        }
        //break only when get the result
        show_board();
    }
}

void get_computer_choice() {
    srand(time(0));
    int comp_choice;
    do {
        comp_choice = rand() % 10;
        comp_choice--;
    } while (board[comp_choice] != ' ');
    board[comp_choice] = 'O';
}

void get_x_player_choice() {
    while (true) {
        cout << "Select your position (1-9): " << endl;
        int user_choice;
        cin >> user_choice;
     user_choice--;
     //assigning values to 0-8 based index
        if (user_choice < 0 || user_choice > 9) {
            cout << "Please select in the range of (1-9)" << endl;
        } else if (board[user_choice] != ' ') {
            cout << "Please select an empty position" << endl;
        } else {
            board[user_choice] = 'X';
            break;
        }
    }
}

int count_board(char ch) {
    int total = 0;
    for (int i = 0; i < 9; i++) {
        if (board[i] == ch)
            total++;
    }
    return total;
}

char check_winner() {
    // Implementation of check_winner...
    //1)heck row-wise, 2)column_wise , 3)diagonals
    
    //1):
    if(board[0]==board[1] && board[1]==board[2] && board[0]!=' ')
    return board[0];
    
    if(board[3]==board[4] && board[3]==board[5] && board[3]!=' ')
    return board[3];
    
    if(board[6]==board[7] && board[7]==board[8] && board[6]!=' ')
    return board[6];
    
    //2);
    if(board[0]==board[3] && board[3]==board[6] && board[0]!=' ')
    return board[0];
    
    if(board[1]==board[4] && board[1]==board[7] && board[1]!=' ')
    return board[1];
    
    if(board[2]==board[5] && board[5]==board[8] && board[8]!=' ')
    return board[2];
    
    //3):
    if(board[0]==board[4] && board[0]==board[8] && board[0]!=' ')
    return board[0];
    
    if(board[2]==board[4] && board[4]==board[6] && board[2]!=' ')
    return board[2];
    
    //check is any empty position remaining or game is draw:
    if(count_board('X') +count_board('O') <9)
    return 'C';  //continue;
    else
    return 'D'; //draw
    
}

void show_board() {
    // Implementation of show_board...
        cout << "   " << "   |  " << "    |   " << endl;
    cout << "   " << board[0] << "  |   " << board[1] << "  | " << board[2] << endl;
    cout << "-------------------" << endl;
    cout << "   " << "   |  " << "    |   " << endl;
    cout << "   " << board[3] << "  |   " << board[4] << "  | " << board[5] << endl;
    cout << "-------------------" << endl;
    cout << "   " << "   |  " << "    |   " << endl;
    cout << "   " << board[6] << "  |   " << board[7] << "  | " << board[8] << endl;
 cout<<"\n\n";
}



